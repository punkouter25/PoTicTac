name: Build and Deploy PoTicTac to Azure

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
  AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
  AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
  AZURE_ENV_NAME: ${{ vars.AZURE_ENV_NAME }}

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install azd
      run: |
        curl -fsSL https://aka.ms/install-azd.sh | bash
        echo "$HOME/.azd/bin" >> $GITHUB_PATH

    - name: Set up .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Log in with Azure (Federated Credentials)
      if: ${{ env.AZURE_CLIENT_ID != '' }}
      run: |
        azd auth login \
          --client-id "$AZURE_CLIENT_ID" \
          --federated-credential-provider "github" \
          --tenant-id "$AZURE_TENANT_ID"

    - name: Log in with Azure (Client Credentials)
      if: ${{ env.AZURE_CLIENT_ID == '' }}
      run: |
        info=$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq -r .)
        echo "::add-mask::$(echo $info | jq -r .clientSecret)"
        
        azd auth login \
          --client-id "$(echo $info | jq -r .clientId)" \
          --client-secret "$(echo $info | jq -r .clientSecret)" \
          --tenant-id "$(echo $info | jq -r .tenantId)"
      env:
        AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Restore dependencies
      run: dotnet restore PoTicTac.sln

    - name: Build solution
      run: dotnet build PoTicTac.sln --configuration Release --no-restore

    - name: Run tests
      run: dotnet test PoTicTac.sln --configuration Release --no-build --verbosity normal

  deploy:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    needs: build
    environment: production
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install azd
      run: |
        curl -fsSL https://aka.ms/install-azd.sh | bash
        echo "$HOME/.azd/bin" >> $GITHUB_PATH

    - name: Set up .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Log in with Azure (Federated Credentials)
      if: ${{ env.AZURE_CLIENT_ID != '' }}
      run: |
        azd auth login \
          --client-id "$AZURE_CLIENT_ID" \
          --federated-credential-provider "github" \
          --tenant-id "$AZURE_TENANT_ID"

    - name: Log in with Azure (Client Credentials)
      if: ${{ env.AZURE_CLIENT_ID == '' }}
      run: |
        info=$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq -r .)
        echo "::add-mask::$(echo $info | jq -r .clientSecret)"
        
        azd auth login \
          --client-id "$(echo $info | jq -r .clientId)" \
          --client-secret "$(echo $info | jq -r .clientSecret)" \
          --tenant-id "$(echo $info | jq -r .tenantId)"
      env:
        AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Azure Dev Provision
      run: azd provision --no-prompt
      env:
        AZURE_ENV_NAME: ${{ env.AZURE_ENV_NAME }}
        AZURE_LOCATION: ${{ vars.AZURE_LOCATION || 'eastus2' }}
        AZURE_SUBSCRIPTION_ID: ${{ env.AZURE_SUBSCRIPTION_ID }}

    - name: Azure Dev Deploy
      run: azd deploy --no-prompt
